sequenceDiagram
    participant User
    participant API as FastAPI Gateway
    participant Auth as Authentication Service
    participant Orch as LangChain Orchestrator
    participant Context as Context Analyzer
    participant Data as Data Ingestion Agent
    participant Stats as Stats Engine
    participant Community as Community Intelligence
    participant Matchup as Matchup Analyzer
    participant Personal as Personalization Agent
    participant Narrative as Narrative Generator
    participant Fact as Fact Checker
    participant Mobile as Mobile Optimizer
    participant Vector as Milvus Vector DB
    participant Graph as Neo4j Graph DB
    participant Cache as Redis Cache
    participant UserDB as PostgreSQL User DB
    
    User->>API: "Should I start Jayson Tatum tonight?" (Mobile)
    API->>Auth: Validate user token & subscription
    Auth-->>API: User context & preferences
    API->>Orch: Route query with user context & device type
    
    Note over Orch: Initialize enhanced agent workflow
    Orch->>Context: Analyze query intent + user context
    
    Context->>Vector: Search for "Jayson Tatum" embeddings
    Vector-->>Context: Player profile & recent performance
    Context->>Graph: Get user preference patterns
    Graph-->>Context: User's historical Tatum decisions
    Context->>UserDB: Get user risk tolerance & team
    UserDB-->>Context: Conservative user, owns Tatum
    
    Context->>Orch: Query plan: start/sit decision (mobile-optimized)
    
    Note over Orch: Enhanced parallel agent execution
    par Fetch Recent Data
        Orch->>Data: Get latest Tatum stats & injury status
        Data->>Cache: Check for real-time data
        alt Cache Miss
            Data->>API: NBA Stats API + injury reports
            API-->>Data: Tonight's game context
            Data->>Cache: Store fresh data with mobile flags
        else Cache Hit
            Cache-->>Data: Recent stats & status
        end
        Data-->>Orch: Updated player data + game context
    and Statistical Analysis
        Orch->>Stats: Calculate tonight's projection
        Stats->>Vector: Query recent performance trends
        Vector-->>Stats: Last 10 games, opponent history
        Stats->>Graph: Get team dynamics & usage
        Graph-->>Stats: Role changes, teammate injuries
        Stats-->>Orch: Fantasy projection with confidence
    and Community Intelligence
        Orch->>Community: Get Tatum sentiment & consensus
        Community->>Vector: Search community discussions
        Vector-->>Community: Reddit sentiment, expert opinions
        Community->>Cache: Check real-time ownership data
        Cache-->>Community: 73% expert start rate
        Community-->>Orch: Social proof data + trending sentiment
    and Matchup Analysis
        Orch->>Matchup: Analyze vs. opponent defense
        Matchup->>Vector: Get opponent defensive profile
        Vector-->>Matchup: Defensive weaknesses vs. wings
        Matchup->>Graph: Historical performance vs. this team
        Graph-->>Matchup: Tatum's 3-game average vs. opponent
        Matchup-->>Orch: Matchup advantages + concerns
    and Personalization
        Orch->>Personal: Apply user-specific weighting
        Personal->>UserDB: Get user's Tatum decision history
        UserDB-->>Personal: 4-2 record when starting Tatum
        Personal->>Graph: User's successful decision patterns
        Graph-->>Personal: User prefers high-floor plays
        Personal-->>Orch: Risk-adjusted recommendation
    end
    
    Note over Orch: Enhanced synthesis phase
    Orch->>Narrative: Generate personalized start/sit analysis
    Narrative->>Vector: Get supporting examples & context
    Vector-->>Narrative: Recent highlights, injury context
    Narrative->>Community: Integrate social proof elements
    Community-->>Narrative: "73% of experts agree" messaging
    Narrative-->>Orch: Formatted mobile-friendly analysis
    
    Orch->>Fact: Validate claims & confidence scores
    Fact->>Graph: Cross-reference all data sources
    Graph-->>Fact: Validation against user history
    Fact->>Vector: Verify statistical projections
    Vector-->>Fact: Source verification & accuracy
    Fact-->>Orch: Confidence scores & reliability check
    
    Note over Orch: Mobile optimization phase
    Orch->>Mobile: Optimize for mobile delivery
    Mobile->>Cache: Check for mobile-cached response
    Mobile->>UserDB: Log query for personalization learning
    UserDB-->>Mobile: Response recorded for future optimization
    Mobile-->>Orch: Mobile-optimized payload & quick actions
    
    Note over Orch: Final enhanced response assembly
    Orch->>API: Complete analysis with enhanced tracing
    API->>User: Start/sit recommendation (Mobile-optimized)
    
    Note over API,User: Enhanced response includes:<br/>- Start/Sit recommendation<br/>- Fantasy point projection<br/>- Community consensus (73% start)<br/>- Matchup advantages<br/>- User-specific confidence<br/>- Quick action buttons<br/>- Notification preferences
    
    Note over User,API: Background processes
    activate Personal
    Personal->>UserDB: Record user query for learning
    Personal->>Graph: Update user preference model
    deactivate Personal
    
    activate Community
    Community->>Vector: Update sentiment trends
    Community->>Cache: Refresh community data
    deactivate Community