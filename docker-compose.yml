version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: sportsbrain-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sportsbrain}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-sportsbrain}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - sportsbrain-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: sportsbrain-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sportsbrain-network

  # Milvus Vector Database
  milvus-etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - milvus_etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - sportsbrain-network

  milvus-minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - milvus_minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - sportsbrain-network

  milvus-standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.3.0
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: milvus-etcd:2379
      MINIO_ADDRESS: milvus-minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "milvus-etcd"
      - "milvus-minio"
    networks:
      - sportsbrain-network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.12
    container_name: sportsbrain-neo4j
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - sportsbrain-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sportsbrain-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://sportsbrain:password@postgres:5432/sportsbrain
      - REDIS_URL=redis://redis:6379/0
      - MILVUS_HOST=milvus-standalone
      - NEO4J_URI=bolt://neo4j:7687
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
      - milvus-standalone
      - neo4j
    networks:
      - sportsbrain-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sportsbrain-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - sportsbrain-network

volumes:
  postgres_data:
  redis_data:
  milvus_etcd:
  milvus_minio:
  milvus_data:
  neo4j_data:
  neo4j_logs:

networks:
  sportsbrain-network:
    driver: bridge