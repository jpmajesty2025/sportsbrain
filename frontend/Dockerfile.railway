FROM node:18-alpine AS builder

WORKDIR /app

# Debug: First copy everything to see what's available
COPY . /tmp/debug
RUN echo "=== Build context files ===" && ls -la /tmp/debug

# Copy package files (from frontend directory context)
COPY package*.json ./

# Install dependencies (including dev dependencies needed for build)
RUN npm ci

# Copy source code (from frontend directory context)
COPY . .

# Debug build environment
RUN echo "=== Source files ===" && find src -name "*.ts*" | head -10
RUN echo "=== TypeScript config ===" && cat tsconfig.json

# Build the application
RUN npm run build 2>&1 | tee /tmp/build.log || (echo "=== BUILD FAILED - Output ===" && cat /tmp/build.log)

# Debug: Check build output
RUN echo "=== Build directory contents ===" && ls -la build/ || echo "No build directory found"

# Production stage
FROM nginx:alpine

# Copy built application
COPY --from=builder /app/build /usr/share/nginx/html

# Debug: Check what was copied
RUN ls -la /usr/share/nginx/html/

# Create directory for nginx template
RUN mkdir -p /etc/nginx/templates

# Create nginx config template for SPA routing
RUN echo 'server { \
    listen $PORT; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
}' > /etc/nginx/templates/default.conf.template

# Use Railway's PORT environment variable (defaults to 80)
ENV PORT=80

# Start nginx with envsubst to replace $PORT
CMD ["/bin/sh", "-c", "envsubst '$$PORT' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]

# Deployment timestamp: 2025-01-08